# Generated by Django 4.2.5 on 2023-11-28 11:10

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Calculator', '0006_food_ml_factor'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='New ingredient', max_length=50)),
                ('protein', models.FloatField(default=0, verbose_name='protein/100g_ml')),
                ('carbs', models.FloatField(default=0, verbose_name='carbs/100g_ml')),
                ('fat', models.FloatField(default=0, verbose_name='fat/100g_ml')),
                ('kcal', models.FloatField(default=0, verbose_name='kcal/100g_ml')),
                ('default_unit', models.CharField(default='g', max_length=2)),
                ('ml_factor', models.FloatField(default=0, verbose_name='ml/100g')),
                ('piece_factor', models.FloatField(default=0, verbose_name='Avg piece weight')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('piece_factor', models.FloatField(default=0, verbose_name='Avg piece weight')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.IntegerField()),
            ],
        ),
        migrations.DeleteModel(
            name='Drink',
        ),
        migrations.DeleteModel(
            name='Food',
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(to='Calculator.recipeingredient'),
        ),
    ]
